plugins {
    id 'java-library'
    id 'org.javamodularity.moduleplugin' version '1.8.10'
    id 'jacoco'
    id 'pmd'
}

group 'xyz.ronella.template'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.17

repositories {
    if (Boolean.valueOf(USE_PRIVATE_REPO)) {
        println "Using Private Repository"

        maven {
            url 'https://repo.ronella.xyz/artifactory/java-central'
            credentials {
                username "${artifactoryUsername}"
                password "${artifactoryPassword}"
            }
            mavenContent {
                releasesOnly()
            }
        }
        maven {
            url 'https://repo.ronella.xyz/archiva/repository/snapshots/'
            credentials {
                username "${archivaUsername}"
                password "${archivaPassword}"
            }
            mavenContent {
                snapshotsOnly()
            }
        }
    }
    else {
        println "Using mavenCentral Repository"
        mavenCentral()
    }
}

pmd {
    consoleOutput = true
    toolVersion = "6.45.0"
    rulesMinimumPriority = 5
    ruleSetFiles = files('config/pmd/java/custom.xml')
}

dependencies {
    implementation 'xyz.ronella.logging:logger-plus:1.1.1'
    implementation 'xyz.ronella.casual:trivial-chunk:2.9.0'

    implementation 'org.apache.logging.log4j:log4j-api:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.2'
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.2'

    testImplementation 'org.mockito:mockito-inline:4.5.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.8.2'
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task testsJar(type: Jar, dependsOn: [testClasses]) {
    archiveClassifier = 'tests'
    from sourceSets.test.output
}

jar.finalizedBy(javadocJar, sourcesJar, testsJar)

test {
    dependsOn(pmdMain)
    finalizedBy(jacocoTestReport)
    useJUnitPlatform()
}

jacocoTestReport {
    dependsOn test
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}