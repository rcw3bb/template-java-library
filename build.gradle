buildscript {
    configurations.classpath {
        resolutionStrategy.activateDependencyLocking()
    }
}

plugins {
    id 'java-library'
    id 'jacoco'
    id 'pmd'
    alias(libs.plugins.moduleplugin)
    //alias(libs.plugins.snyk)
}

group GROUP
version VERSION

configurations {
    mockitoAgent
    pmdTool
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencyLocking {
    lockAllConfigurations()
}

dependencies {
    implementation libs.bundles.logger
    implementation libs.trivial.chunk

    testImplementation testLibs.bundles.unit.test
    mockitoAgent(testLibs.mockito.core) {
        transitive = false
    }
    pmdTool libs.pmd //This must be the only dependency attached to the pmdTool configuration.
}

/*snyk {
    arguments = '--all-sub-projects'
    severity = 'low'
    api = "${snykToken}"
    autoDownload = true
    autoUpdate = true
}*/

test {
    jvmArgs("-javaagent:${configurations.mockitoAgent.asPath}")
    dependsOn(pmdMain)
    finalizedBy(jacocoTestReport)
    //finalizedBy('snyk-test')
    useJUnitPlatform()
}

task testsJar(type: Jar, dependsOn: [testClasses]) {
    archiveClassifier = 'tests'
    from sourceSets.test.output
}

jar {
    manifest {
        attributes(
                "Implementation-Title": project.name,
                "Implementation-Version": project.version
        )
    }
    dependsOn(test)
    //dependsOn('snyk-monitor')
    finalizedBy(javadocJar, sourcesJar, testsJar)
}

pmd {
    consoleOutput = true
    toolVersion = configurations.pmdTool.resolvedConfiguration.firstLevelModuleDependencies.moduleVersion.first
    rulesMinimumPriority = 5
    ruleSetFiles = files('quality/pmd/java/custom.xml')
    ruleSets = []
    logger.lifecycle("PMD version: ${pmd.toolVersion}")
}

pmdTest.enabled = false

jacocoTestReport {
    dependsOn test
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}